[app-blacklist-check]
include => app-blacklist-check-custom
 
;exten => s,1,Set(VoiceMail_Num=101) ; Set the extension number of the mailbox where the files are to go
    exten => s,n,Set(MailApp=/bin/mail)
    exten => s,n,Set(eMailAddress=root)
    exten => s,n(check),GotoIf($["${BLACKLIST()}"="1"]?blacklisted)
     exten => s,n,Set(CALLED_BLACKLIST=1)
    exten => s,n,Return()
     exten => s,n(blacklisted),Answer()
    exten => s,n,Wait(1)
     ;exten => s,n,Set(TimeStart=${STRFTIME(${EPOCH},,%s)})
    ; exten => s,n,Set(PathToVmailDir=${ASTSPOOLDIR}/voicemail/default/${VoiceMail_Num}/INBOX/)
    ;exten => s,n,Set(FileNum=0)
    ;exten => s,n,While($[${FileNum} < 50])
    ;exten => s,n,ExecIf($[${FileNum} < 10]?Set(VMFileName=msg000${FileNum}):Set(VMFileName=msg00${FileNum}))
    ;exten => s,n,Set(CALLFILENAME=${VMFileName})
    exten => ;s,n,Set(FullPathToTxtName=${PathToVmailDir}${VMFileName}.txt)
    ;exten => s,n,Set(FullPathToWavName=${PathToVmailDir}${VMFileName}.wav)
    ;exten => s,n,System(test -e ${FullPathToTxtName})
    ;exten => s,n,Noop(${SYSTEMSTATUS})
    exten => ;s,n,GotoIf($["${SYSTEMSTATUS}"="SUCCESS"]?trynextfile:startrecording)
    ;exten => s,n(trynextfile),Set(FileNum=$[${FileNum}+ 1])
    ;exten => s,n,EndWhile
    ;exten => s,n,Hangup()
	;exten => s,n(startrecording),Noop()
    ;exten => s,n,System(e-c-h-o -e "\;" > ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "\; Message Information file" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "\;" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "[message]" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "origmailbox=${VoiceMail_Num}" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "context=macro-vm" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "macrocontext=ext-local" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "exten=s-NOANSWER" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "rdnis=unknown" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "priority=2" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "callerchan=${CHANNEL}" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "callerid='"'${CALLERID(name)}'"' \<${CALLERID(num)}\>" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "origdate=${STRFTIME(${EPOCH},,%a %b %d %I:%M:%S %p UTC %Y)}" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "origtime=${STRFTIME(${EPOCH},,%s)}" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "category=" >> ${FullPathToTxtName})
    ;exten => s,n,System(e-c-h-o -e "flag=" >> ${FullPathToTxtName})
     exten => s,n,Monitor(wav,${PathToVmailDir}${CALLFILENAME},m)
    exten => s,n,Set(CALLFILENAME=Telemarketer-${CALLERID(num)}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
	exten => s,n,Monitor(wav,${CALLFILENAME},m)
	exten => s,n,Dial(SIP/lenny@sip.itslenny.com,60,grL(240000))
 exten => h,1,Noop(Use this (h extension) to do things after normal hangup is requested but before script is stopped)
    exten => h,n,StopMonitor()
    ;exten => h,n,Set(TimeEnd=${STRFTIME(${EPOCH},,%s)})
    ;exten => h,n,Set(TimeElapsed=$[${TimeEnd} - ${TimeStart}])
    ;exten => h,n,System(e-c-h-o -e "duration=${TimeElapsed}" >> ${FullPathToTxtName})
    ;exten => h,n,Set(CurrentDateTime=${STRFTIME(${EPOCH},,%a %b %d %I:%M:%S %p UTC %Y)})
    exten => h,n,System(e-c-h-o "A ${TimeElapsed} second recording of a telemarketer call from ${CALLERID(all)} was left on ${CurrentDateTime}" | ${MailApp} -s "Telemarketer interaction recorded" -a ${FullPathToWavName} ${eMailAddress})
    exten => h,n,Hangup()
 
; end of [app-blacklist-check]
